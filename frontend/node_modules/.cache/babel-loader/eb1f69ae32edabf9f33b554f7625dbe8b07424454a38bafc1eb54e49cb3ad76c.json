{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\allen\\\\VSCode\\\\myapp\\\\frontend\\\\src\\\\CalView.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport FullCalendar from \"@fullcalendar/react\";\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\nimport interactionPlugin from \"@fullcalendar/interaction\"; // Enables interactivity like clicking or dragging events\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CalView() {\n  _s();\n  const navigate = useNavigate();\n\n  // Example events to display on the calendar\n  const events = [{\n    title: \"Meeting with Team\",\n    date: \"2024-11-06\"\n  }, {\n    title: \"Project Deadline\",\n    date: \"2024-11-10\"\n  }, {\n    title: \"Workshop\",\n    start: \"2024-11-12T10:00:00\",\n    end: \"2024-11-12T12:00:00\"\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Calendar View\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FullCalendar, {\n      plugins: [dayGridPlugin, timeGridPlugin, interactionPlugin],\n      initialView: \"dayGridMonth\" // Default view for the calendar\n      ,\n      editable: true // Allow dragging and resizing events\n      ,\n      selectable: true // Allow users to select dates/times\n      ,\n      events: events // Set initial events\n      ,\n      dateClick: info => alert(`Clicked on date: ${info.dateStr}`) // Handle date clicks\n      ,\n      eventClick: info => alert(`Event: ${info.event.title}`) // Handle event clicks\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => navigate(\"/dashboard\"),\n      children: \"Back to Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n}\n_s(CalView, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n_c = CalView;\nexport default CalView;\nvar _c;\n$RefreshReg$(_c, \"CalView\");","map":{"version":3,"names":["React","useNavigate","FullCalendar","dayGridPlugin","timeGridPlugin","interactionPlugin","jsxDEV","_jsxDEV","CalView","_s","navigate","events","title","date","start","end","children","fileName","_jsxFileName","lineNumber","columnNumber","plugins","initialView","editable","selectable","dateClick","info","alert","dateStr","eventClick","event","onClick","_c","$RefreshReg$"],"sources":["C:/Users/allen/VSCode/myapp/frontend/src/CalView.js"],"sourcesContent":["import React from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport FullCalendar from \"@fullcalendar/react\";\r\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\r\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\r\nimport interactionPlugin from \"@fullcalendar/interaction\"; // Enables interactivity like clicking or dragging events\r\n\r\nfunction CalView() {\r\n    const navigate = useNavigate();\r\n\r\n    // Example events to display on the calendar\r\n    const events = [\r\n        { title: \"Meeting with Team\", date: \"2024-11-06\" },\r\n        { title: \"Project Deadline\", date: \"2024-11-10\" },\r\n        { title: \"Workshop\", start: \"2024-11-12T10:00:00\", end: \"2024-11-12T12:00:00\" },\r\n    ];\r\n\r\n    return (\r\n        <div>\r\n            <h1>Calendar View</h1>\r\n            <FullCalendar\r\n                plugins={[dayGridPlugin, timeGridPlugin, interactionPlugin]}\r\n                initialView=\"dayGridMonth\"  // Default view for the calendar\r\n                editable={true}  // Allow dragging and resizing events\r\n                selectable={true}  // Allow users to select dates/times\r\n                events={events}  // Set initial events\r\n                dateClick={(info) => alert(`Clicked on date: ${info.dateStr}`)}  // Handle date clicks\r\n                eventClick={(info) => alert(`Event: ${info.event.title}`)}  // Handle event clicks\r\n            />\r\n            <button onClick={() => navigate(\"/dashboard\")}>Back to Dashboard</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CalView;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,YAAY,MAAM,qBAAqB;AAC9C,OAAOC,aAAa,MAAM,uBAAuB;AACjD,OAAOC,cAAc,MAAM,wBAAwB;AACnD,OAAOC,iBAAiB,MAAM,2BAA2B,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE3D,SAASC,OAAOA,CAAA,EAAG;EAAAC,EAAA;EACf,MAAMC,QAAQ,GAAGT,WAAW,CAAC,CAAC;;EAE9B;EACA,MAAMU,MAAM,GAAG,CACX;IAAEC,KAAK,EAAE,mBAAmB;IAAEC,IAAI,EAAE;EAAa,CAAC,EAClD;IAAED,KAAK,EAAE,kBAAkB;IAAEC,IAAI,EAAE;EAAa,CAAC,EACjD;IAAED,KAAK,EAAE,UAAU;IAAEE,KAAK,EAAE,qBAAqB;IAAEC,GAAG,EAAE;EAAsB,CAAC,CAClF;EAED,oBACIR,OAAA;IAAAS,QAAA,gBACIT,OAAA;MAAAS,QAAA,EAAI;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACtBb,OAAA,CAACL,YAAY;MACTmB,OAAO,EAAE,CAAClB,aAAa,EAAEC,cAAc,EAAEC,iBAAiB,CAAE;MAC5DiB,WAAW,EAAC,cAAc,CAAE;MAAA;MAC5BC,QAAQ,EAAE,IAAK,CAAE;MAAA;MACjBC,UAAU,EAAE,IAAK,CAAE;MAAA;MACnBb,MAAM,EAAEA,MAAO,CAAE;MAAA;MACjBc,SAAS,EAAGC,IAAI,IAAKC,KAAK,CAAC,oBAAoBD,IAAI,CAACE,OAAO,EAAE,CAAE,CAAE;MAAA;MACjEC,UAAU,EAAGH,IAAI,IAAKC,KAAK,CAAC,UAAUD,IAAI,CAACI,KAAK,CAAClB,KAAK,EAAE,CAAE,CAAE;IAAA;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/D,CAAC,eACFb,OAAA;MAAQwB,OAAO,EAAEA,CAAA,KAAMrB,QAAQ,CAAC,YAAY,CAAE;MAAAM,QAAA,EAAC;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxE,CAAC;AAEd;AAACX,EAAA,CAzBQD,OAAO;EAAA,QACKP,WAAW;AAAA;AAAA+B,EAAA,GADvBxB,OAAO;AA2BhB,eAAeA,OAAO;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}